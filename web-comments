#!/usr/bin/env python3
import pickle
import sys
import typing as T
from pathlib import Path

import configargparse
import xdg
from nyaa_si import NyaaSiApi, Torrent, TorrentComment


def parse_args():
    parser = configargparse.ArgumentParser(
        formatter_class=configargparse.RawTextHelpFormatter,
        default_config_files=[Path(xdg.XDG_CONFIG_HOME) / 'oc-tools.yml']
    )

    parser.add_argument('--nyaasi-user', required=True)
    parser.add_argument('--nyaasi-pass', required=False)

    return parser.parse_known_args()[0]


def print_comments(
        torrents: T.Dict[int, Torrent],
        comments: T.Dict[int, T.List[TorrentComment]]
) -> None:
    for torrent_id, torrent_comments in sorted(
            comments.items(),
            key=lambda item: max(
                comment.comment_date
                for comment in item[1]
            )
    ):
        torrent = torrents[torrent_id]
        print('-' * 80)
        print(torrent.name)
        print()

        for comment in torrent_comments:
            print(f'[{comment.comment_date}] {comment.author_name}:')
            print(comment.text)
            print()


def main() -> None:
    args = parse_args()

    cache_path = Path(xdg.XDG_CACHE_HOME) / 'oc-comments.dat'
    comments: T.Dict[int, T.List[TorrentComment]] = {}
    if cache_path.exists():
        comments = pickle.loads(cache_path.read_bytes())

    print(f'Getting torrent list…', file=sys.stderr)

    api = NyaaSiApi()
    if args.nyaasi_pass:
        api.login(args.nyaasi_user, args.nyaasi_pass)

    torrents = {
        torrent.torrent_id: torrent
        for torrent in api.list_user_torrents(args.nyaasi_user)
    }

    for torrent in torrents.values():
        if len(comments.get(torrent.torrent_id, [])) != torrent.comment_count:
            print(f'Getting comments for "{torrent.name}"…', file=sys.stderr)
            comments[torrent.torrent_id] = list(
                api.list_torrent_comments(torrent.torrent_id)
            )

    cache_path.write_bytes(pickle.dumps(comments))

    print_comments(torrents, comments)


if __name__ == '__main__':
    main()
